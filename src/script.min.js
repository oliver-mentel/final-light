const sunriseSunsetApiBase="https://api.sunrise-sunset.org/json",timeZoneDbApiKey="B3VY8R50KIYD",state={lat:null,lng:null,timezone:null,cachedTimezoneData:null,lastUsedDate:"",lastUsedLat:"",lastUsedLng:"",lastSunData:null},elements={locationSearch:document.getElementById("locationSearch"),suggestions:document.getElementById("suggestions"),clearLocationBtn:document.getElementById("clearLocationBtn"),datePicker:document.getElementById("datePicker"),resultContent:document.getElementById("resultContent"),resultSkeleton:document.getElementById("resultSkeleton"),sunset:document.getElementById("sunset"),twilightEnd:document.getElementById("twilightEnd"),timePerHole:document.getElementById("timePerHole"),totalRoundTime:document.getElementById("totalRoundTime"),lastTeeTime:document.getElementById("lastTeeTime"),slowFlightNote:document.getElementById("slowFlightNote"),timeFormat:document.getElementById("timeFormat"),includeTwilight:document.getElementById("includeTwilight"),holeCount:document.getElementById("holeCount"),flightSize:document.getElementById("flightSize"),slowFlightDelay:document.getElementById("slowFlightDelay"),toggleSwitch:document.querySelector('.theme-switch input[type="checkbox"]'),currentTheme:localStorage.getItem("theme"),weekendNote:document.getElementById("weekendNote"),walkingNote:document.getElementById("walkingNote"),isWalking:document.getElementById("isWalking"),courseLength:document.getElementById("courseLength")};function switchTheme(e){e.target.checked?(document.documentElement.setAttribute("data-theme","dark"),localStorage.setItem("theme","dark"),updateLogo(!0)):(document.documentElement.setAttribute("data-theme","light"),localStorage.setItem("theme","light"),updateLogo(!1))}function updateLogo(e){const t=document.getElementById("logoImage");t.src=e?"assets/final-light-dark.png":"assets/final-light.png"}function showAdditionalFields(){document.getElementById("additionalFields").classList.remove("hidden")}function hideAdditionalFields(){document.getElementById("additionalFields").classList.add("hidden")}function setDatePickerToToday(){const e=luxon.DateTime.local().toFormat("yyyy-MM-dd");return elements.datePicker.value=e,e}async function fetchTimeZone(e,t){try{const n=`https://api.timezonedb.com/v2.1/get-time-zone?key=B3VY8R50KIYD&format=json&by=position&lat=${e}&lng=${t}`,a=await fetch(n),o=await a.json();if("OK"===o.status)return state.cachedTimezoneData=o.zoneName,o.zoneName;throw new Error(o.message||"Failed to fetch timezone")}catch(e){return console.warn("Error fetching time zone:",e),Intl.DateTimeFormat().resolvedOptions().timeZone}}function formatTime(e,t,n){const{DateTime:a}=luxon;return a.fromISO(e,{zone:"UTC"}).setZone(n).toFormat(t?"HH:mm":"h:mm a")}function clearLocation(){elements.locationSearch.value="",elements.suggestions.innerHTML=""}async function handleLocationSelection(e){elements.locationSearch.value=e.display_name,elements.suggestions.innerHTML="",state.lat=e.lat,state.lng=e.lon,state.timezone=await fetchTimeZone(state.lat,state.lng),state.timezone||(state.timezone=Intl.DateTimeFormat().resolvedOptions().timeZone,console.warn("Failed to fetch timezone, using local timezone as fallback.")),saveLocationToStorage(e.display_name,e.lat,e.lon,state.timezone),showAdditionalFields(),updateHandicapDropdowns(),await calculateLastTeeTime(!0)}function formatDate(e){return luxon.DateTime.fromISO(e).toFormat("dd.MM.yyyy")}function saveSunDataToStorage(e,t){const n=`sunData_${e}_${state.lat}_${state.lng}`;localStorage.setItem(n,JSON.stringify(t))}function loadSunDataFromStorage(e){const t=`sunData_${e}_${state.lat}_${state.lng}`,n=localStorage.getItem(t);return n?JSON.parse(n):null}async function fetchSunData(e){const t=loadSunDataFromStorage(e);if(t)return t;try{const t=`${sunriseSunsetApiBase}?lat=${state.lat}&lng=${state.lng}&date=${e}&formatted=0`,n=await fetch(t),a=await n.json();if("OK"!==a.status)throw new Error("Failed to fetch sun data");const o={sunset:a.results.sunset.replace("+00:00","Z"),civil_twilight_end:a.results.civil_twilight_end.replace("+00:00","Z")};return saveSunDataToStorage(e,o),o}catch(e){throw console.error("Error fetching sun data:",e),e}}function calculatePlayTime(e,t,n,a){const o=9===e?a?90:67.5:a?180:135,s=9===e?{1:0,2:10,3:17.5,4:25}:{1:0,2:20,3:35,4:50};let l=0,i=0,c=0,m=0;for(let e=1;e<=t;e++){const t=document.getElementById(`handicap${e}`);if(t){const e=parseInt(t.value,10);0===e&&m++,20===e&&i++,30===e&&c++}}const d=9===e?.5:1;c>0?l=(20+5*(c-1))*d:i>0?l=(15+5*(i-1))*d:m===t&&(l=-15*d);let r=(o+s[t]+l)*(n?1.1:1);const u=(9===e?{1:{min:60,max:120},2:{min:75,max:135},3:{min:90,max:150},4:{min:105,max:150}}:{1:{min:120,max:240},2:{min:150,max:270},3:{min:180,max:300},4:{min:210,max:270}})[t];return r=Math.max(Math.min(r,u.max),u.min),Math.round(r)}function roundToNext10Minutes(e){const t=luxon.DateTime.fromISO(e,{zone:"UTC"});return t.set({minute:10*Math.floor(t.minute/10),second:0,millisecond:0}).toISO()}async function calculateLastTeeTime(e=!0){if(state.lat&&state.lng&&state.timezone){e&&(elements.resultSkeleton.classList.remove("hidden"),elements.resultContent.classList.add("hidden"));try{const e=elements.timeFormat.checked;let t=luxon.DateTime.fromISO(elements.datePicker.value||setDatePickerToToday()).toISODate();t===state.lastUsedDate&&state.lat===state.lastUsedLat&&state.lng===state.lastUsedLng||(state.lastSunData=await fetchSunData(t),state.lastUsedDate=t,state.lastUsedLat=state.lat,state.lastUsedLng=state.lng);const n=state.lastSunData;await new Promise(e=>setTimeout(e,1500)),elements.sunset.textContent=formatTime(n.sunset,e,state.timezone),elements.twilightEnd.textContent=formatTime(n.civil_twilight_end,e,state.timezone);const a=parseInt(elements.holeCount.value),o=parseInt(elements.flightSize.value),s=elements.includeTwilight.checked,l=["Saturday","Sunday"].includes(luxon.DateTime.fromISO(t).toFormat("cccc")),i=elements.isWalking.checked,c=parseInt(elements.courseLength.value),m=parseInt(document.getElementById("courseTerrain").value);let d=calculatePlayTime(a,o,l,i);const r=parseInt(elements.slowFlightDelay.value);0!==r&&(d+=r*a),0!==c&&(d+=c*a),0!==m&&(d+=m*a);const u=Math.round(d/a);elements.timePerHole.textContent=`${u}min`,elements.totalRoundTime.textContent=luxon.Duration.fromObject({minutes:d}).toFormat("h'h' m'min'");const g=luxon.DateTime.fromISO(n.sunset,{zone:"UTC"}).setZone(state.timezone),h=luxon.DateTime.fromISO(n.civil_twilight_end,{zone:"UTC"}).setZone(state.timezone),y=roundToNext10Minutes(g.minus({minutes:d}).toISO()),p=roundToNext10Minutes(h.minus({minutes:d}).toISO());state.lastTeeSunset=y,state.lastTeeTwilight=p;const T=s?p:y;elements.lastTeeTime.textContent=formatTime(T,e,state.timezone),r>0?(elements.slowFlightNote.textContent=`Note: Added ${r} minutes per hole due to slow play.`,elements.slowFlightNote.classList.remove("hidden")):elements.slowFlightNote.classList.add("hidden"),l?(elements.weekendNote.textContent="Note: Weekend play time adjustment applied.",elements.weekendNote.classList.remove("hidden")):elements.weekendNote.classList.add("hidden"),i?(elements.walkingNote.textContent="Note: Walking time adjustment applied.",elements.walkingNote.classList.remove("hidden")):elements.walkingNote.classList.add("hidden")}catch(e){console.error("Error calculating last tee time:",e),alert("An error occurred while calculating the last tee time. Please make sure a valid date is selected and try again.")}finally{e&&(elements.resultSkeleton.classList.add("hidden"),elements.resultContent.classList.remove("hidden"))}}else alert("Please set a location first.")}async function updateCourseLengthOptions(){const e=parseInt(elements.holeCount.value),t=document.getElementById("courseLength"),n=t.value;let a;t.innerHTML="",a=18===e?[{value:"0",text:"Average (5,700-6,200m / 6,200-6,800 yds)"},{value:"-1",text:"Short (Under 5,700m / Under 6,200 yds)"},{value:"1",text:"Long (6,200-6,600m / 6,800-7,200 yds)"},{value:"2",text:"Championship (Over 6,600m / Over 7,200 yds)"}]:[{value:"0",text:"Average (2,800-3,100m / 3,100-3,400 yds)"},{value:"-1",text:"Short (Under 2,800m / Under 3,100 yds)"},{value:"1",text:"Long (3,100-3,300m / 3,400-3,600 yds)"},{value:"2",text:"Championship (Over 3,300m / Over 3,600 yds)"}],a.forEach(e=>{const a=document.createElement("option");a.value=e.value,a.textContent=e.text,e.value===n?a.selected=!0:"0"!==e.value||n||(a.selected=!0),t.appendChild(a)});try{await calculateLastTeeTime(!0)}catch(e){console.error("Error calculating last tee time:",e)}}function updateLastTeeTimeDisplay(){const e=elements.timeFormat.checked,t=elements.includeTwilight.checked?state.lastTeeTwilight:state.lastTeeSunset;t&&(elements.lastTeeTime.textContent=formatTime(t,e,state.timezone))}function handleLocationInput(){const e=elements.locationSearch.value.trim();if(e.length<3)return elements.suggestions.innerHTML="",void(elements.suggestions.style.display="none");fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(e)}&limit=5`).then(e=>e.json()).then(displaySuggestions).catch(e=>console.error("Error fetching location suggestions:",e))}function displaySuggestions(e){elements.suggestions.innerHTML="",e.length>0?(e.forEach(e=>{const t=document.createElement("li");t.textContent=e.display_name,t.addEventListener("click",()=>handleLocationSelection(e)),elements.suggestions.appendChild(t)}),elements.suggestions.style.display="block"):elements.suggestions.style.display="none"}function updateHandicapDropdowns(){const e=parseInt(elements.flightSize.value),t=document.getElementById("handicapContainer");t.innerHTML="";for(let n=1;n<=e;n++){const e=document.createElement("label");e.htmlFor=`handicap${n}`,e.className="label",e.textContent=`Player ${n} Handicap:`;const a=document.createElement("select");a.id=`handicap${n}`,a.className="handicap-select";[{value:"0",text:"0-10 (Low)"},{value:"10",text:"11-20 (Mid)"},{value:"20",text:"21-30 (High)"},{value:"30",text:"30+ (Beginner)"}].forEach(e=>{const t=document.createElement("option");t.value=e.value,t.textContent=e.text,"10"===e.value&&(t.selected=!0),a.appendChild(t)}),a.addEventListener("change",()=>calculateLastTeeTime(!0));const o=document.createElement("div");o.className="form-group",o.appendChild(e),o.appendChild(a),t.appendChild(o)}}function saveLocationToStorage(e,t,n,a){const o={display_name:e,lat:t,lng:n,timezone:a};localStorage.setItem("golfLocation",JSON.stringify(o))}function loadLocationFromStorage(){const e=localStorage.getItem("golfLocation");if(e){const t=JSON.parse(e);state.lat=t.lat,state.lng=t.lng,state.timezone=t.timezone,elements.locationSearch.value=t.display_name,showAdditionalFields(),updateHandicapDropdowns()}else elements.resultSkeleton.classList.add("hidden"),elements.resultContent.classList.remove("hidden")}function debounce(e,t){let n;return function(...a){clearTimeout(n),n=setTimeout(()=>e.apply(this,a),t)}}function applyTheme(e){document.documentElement.setAttribute("data-theme",e),elements.toggleSwitch.checked="dark"===e,updateLogo("dark"===e)}elements.currentTheme&&(document.documentElement.setAttribute("data-theme",elements.currentTheme),"dark"===elements.currentTheme&&(elements.toggleSwitch.checked=!0)),elements.locationSearch.addEventListener("input",debounce(handleLocationInput,300)),elements.datePicker.addEventListener("change",calculateLastTeeTime),elements.toggleSwitch.addEventListener("change",switchTheme,!1),elements.clearLocationBtn.addEventListener("click",clearLocation),elements.isWalking.addEventListener("change",()=>calculateLastTeeTime(!0));const currentTheme=localStorage.getItem("theme");currentTheme&&applyTheme(currentTheme);const checkbox=document.getElementById("checkbox");checkbox&&checkbox.addEventListener("change",function(){document.documentElement.classList.toggle("dark",this.checked)}),document.addEventListener("click",function(e){e.target!==elements.locationSearch&&e.target!==elements.suggestions&&(elements.suggestions.innerHTML="",elements.suggestions.style.display="none")}),document.addEventListener("DOMContentLoaded",()=>{loadLocationFromStorage(),(async()=>{if(state.lat&&state.lng&&state.timezone){showAdditionalFields(),setDatePickerToToday(),await updateCourseLengthOptions();try{await calculateLastTeeTime(!0)}catch(e){console.error("Error in calculateLastTeeTime:",e)}}else hideAdditionalFields()})(),document.getElementById("advancedToggle").addEventListener("click",()=>{const e=document.getElementById("advancedOptions"),t=document.querySelector(".toggle-icon");e.classList.toggle("hidden"),t.classList.toggle("rotated")}),elements.clearLocationBtn.addEventListener("click",clearLocation);const e=document.body,t=document.getElementById("mainContainer");["holeCount","slowFlightDelay","courseLength","courseTerrain"].forEach(e=>{const t=document.getElementById(e);t&&t.addEventListener("change",async()=>{try{await calculateLastTeeTime(!0)}catch(e){console.error("Error calculating last tee time:",e)}})}),elements.flightSize.addEventListener("change",async()=>{updateHandicapDropdowns();try{await calculateLastTeeTime(!0)}catch(e){console.error("Error calculating last tee time:",e)}}),elements.includeTwilight.addEventListener("change",n=>{n.target.checked?(e.classList.add("twilight-effect"),t.classList.add("twilight-effect"),document.querySelector(".container").classList.add("twilight-effect")):(e.classList.remove("twilight-effect"),t.classList.remove("twilight-effect"),document.querySelector(".container").classList.remove("twilight-effect")),updateLastTeeTimeDisplay()}),elements.holeCount.addEventListener("change",async()=>{try{await updateCourseLengthOptions()}catch(e){console.error("Error updating course length options:",e)}}),elements.timeFormat.addEventListener("change",()=>{document.getElementById("formatLabel").textContent=elements.timeFormat.checked?"24H":"12H",updateLastTeeTimeDisplay()})});